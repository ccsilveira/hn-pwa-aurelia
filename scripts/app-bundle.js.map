{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","resources/elements/about.ts","resources/elements/nav-bar.ts","resources/elements/topnews.ts"],"names":[],"mappings":";;;IACA;QAGE;YAFA,YAAO,GAAG,cAAc,CAAC;YAGvB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC;QACD,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,MAAM,CAAC,KAAK,GAAG,wBAAwB,CAAC;YACxC,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,EAAK,IAAI,EAAE,SAAS,EAAI,QAAQ,EAAE,4BAA4B,EAAG,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;gBAClH,EAAE,KAAK,EAAE,OAAO,EAAa,IAAI,EAAE,OAAO,EAAM,QAAQ,EAAE,0BAA0B,EAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;aACpH,CAAC,CAAC;QACL,CAAC;QAEO,mCAAqB,GAA7B;YACE,EAAE,CAAC,CAAC,eAAe,IAAI,SAAS,CAAC,CAAC,CAAC;gBACjC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;oBAEnF,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;gBACxF,CAAC,EAAE,UAAC,GAAG;oBAEL,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,GAAG,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;YACP,CAAC;QACD,CAAC;QACH,UAAC;IAAD,CA1BA,AA0BC,IAAA;IA1BY,kBAAG;;;;;;ICDhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;ICtBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC;;;;;;;;;;;;;;;ICFD;QAAA;QAMA,CAAC;QAHC,4BAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QACH,YAAC;IAAD,CANA,AAMC,IAAA;IALW;QAAT,4BAAQ;;wCAAO;IADL,sBAAK;;;;;;;;;;;;;;;ICAlB;QAAA;QAMA,CAAC;QAHC,6BAAY,GAAZ,UAAa,QAAQ,EAAE,QAAQ;QAE/B,CAAC;QACH,aAAC;IAAD,CANA,AAMC,IAAA;IALW;QAAT,4BAAQ;;yCAAO;IADL,wBAAM;;;;;;ICAnB;QAAA;QAEA,CAAC;QAAD,cAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0BAAO","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration, Router} from 'aurelia-router';\nexport class App {\n  message = 'Hello World!';\n  router: Router;\n  constructor() {\n    this.registerServiceWorker();\n  }\n  configureRouter(config: RouterConfiguration, router: Router) {\n    this.router = router;\n    config.title = 'Hacker News in Aurelia';\n    config.map([\n      { route: ['', 'topnews'],    name: 'topnews',   moduleId: 'resources/elements/topnews',  nav: true, title: 'top' },\n      { route: 'about',            name: 'about',     moduleId: 'resources/elements/about',   nav: true, title: 'about' }\n    ]);\n  }\n\n  private registerServiceWorker(){\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/src/serviceworker/basic-sw.js').then((registration)  =>{\n        // Registration was successful\n        console.log('ServiceWorker registration successful with scope: ', registration.scope);\n      }, (err) => {\n        // registration failed :(\n        console.log('ServiceWorker registration failed: ', err);\n      });\n  }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class About {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class NavBar {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class TopNews {\n\n}\n\n"],"sourceRoot":"../src"}