{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","resources/serviceWorkerSetup.ts","resources/elements/about.ts","resources/elements/nav-bar.ts","resources/elements/topnews.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { ServiceWorkerSetup } from './resources/serviceWorkerSetup';\n\nimport { RouterConfiguration, Router } from 'aurelia-router';\nimport {inject} from 'aurelia-framework';\n\n@inject(ServiceWorkerSetup)\nexport class App {\n  message = 'Hello World!';\n  router: Router;\n  constructor(serviceWorkerSetup: ServiceWorkerSetup) {\n    serviceWorkerSetup.registerServiceWorker();\n  }\n  configureRouter(config: RouterConfiguration, router: Router) {\n    this.router = router;\n    config.title = 'Hacker News in Aurelia';\n    config.map([\n      { route: ['', 'topnews'], name: 'topnews', moduleId: 'resources/elements/topnews', nav: true, title: 'top' },\n      { route: 'about', name: 'about', moduleId: 'resources/elements/about', nav: true, title: 'about' }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class ServiceWorkerSetup{\r\n\r\n  public registerServiceWorker() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.register('/src/serviceworker/basic-sw.js').then((registration) => {\r\n        // Registration was successful\r\n        console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }, (err) => {\r\n        // registration failed :(\r\n        console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    }\r\n  }\r\n}","import {bindable} from 'aurelia-framework';\n\nexport class About {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class NavBar {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable} from 'aurelia-framework';\n\nexport class TopNews {\n\n}\n\n"],"sourceRoot":"../src"}